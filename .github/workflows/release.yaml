name: Release
on:
  push:
    tags: [ "*" ]

jobs:
  basic-checks:
    name: Run basic-checks
    runs-on: ubuntu-latest
    # container: golang:1.14-buster
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: go-fmt
      run: go fmt ./...

    - name: Generate cobra docs
      run: rm -rf docs/ && go run main.go docs

    - name: Check for uncommited files
      run: if [ -n "$(git status --untracked-files=no --porcelain)" ]; then echo "There are uncommitted changes"; exit 1; fi
    
    - name: Run tests
      run: go test ./... -cover
    
  build:
    name: Release
    needs: basic-checks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
      id: go

    - name: Set Go Releaser Environment
      run: |
        echo "GIT_DIRTY="$(test -n "`git status --porcelain`" && echo "+CHANGES" || true) >> $GITHUB_ENV
        echo "VERSION="$(grep "var Version " pkg/version/version.go | awk -F " = " -F '"' '{ print $2 }') >> $GITHUB_ENV
        echo "BUILD_DATE="$(date '+%Y-%m-%d-%H:%M:%S') >> $GITHUB_ENV
        echo "TAG_NAME="$(git describe --tags --abbrev=0) >> $GITHUB_ENV
  
    - name: Create Release
      uses: goreleaser/goreleaser-action@v2
      with:
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GIT_COMMIT: ${{ github.sha }} 
        IMAGE_NAME: "forgerock/forgeops-cli"
  
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: dist/*.tar.gz
